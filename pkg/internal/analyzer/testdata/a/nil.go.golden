// Copyright 2024-2025 Oliver Eikemeier. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// SPDX-License-Identifier: Apache-2.0

package a

func variadic(A, int, ...B) A { // want " \\(zl:par\\)$" " \\(zl:res\\)$" " \\(zl:typ\\)$"
	return A{} // want " \\(zl:ret\\)$"
}

var _ = variadic(A{}, 0, B{}, B{}, B{}) // want " \\(zl:arg\\)$" " \\(zl:add\\)$" " \\(zl:arg\\)$" " \\(zl:arg\\)$"

var _ = append([]byte{}, "test"...)

func tuplercv(A, B) A { // want " \\(zl:par\\)$" " \\(zl:par\\)$" " \\(zl:res\\)$"
	return A{} // want " \\(zl:ret\\)$"
}

func tuplef() (A, B) { // want " \\(zl:res\\)$" " \\(zl:res\\)$"
	return A{}, B{} // want " \\(zl:ret\\)$" " \\(zl:ret\\)$"
}

var _ = tuplercv(tuplef())

var _ = func(A, B) A { // want " \\(zl:par\\)$" " \\(zl:par\\)$" " \\(zl:res\\)$"
	return A{} // want " \\(zl:ret\\)$"
}(func() (A, B) { // want " \\(zl:res\\)$" " \\(zl:res\\)$"
	return A{}, B{} // want " \\(zl:ret\\)$" " \\(zl:ret\\)$"
}())
